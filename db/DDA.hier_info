|DDA
clk_int => clk_int.IN1
rst_n => dir_y.ACLR
rst_n => dir_x.ACLR
rst_n => Y_end_0[0].ACLR
rst_n => Y_end_0[1].ACLR
rst_n => Y_end_0[2].ACLR
rst_n => Y_end_0[3].ACLR
rst_n => Y_end_0[4].ACLR
rst_n => Y_end_0[5].ACLR
rst_n => Y_end_0[6].ACLR
rst_n => Y_end_0[7].ACLR
rst_n => Y_end_0[8].ACLR
rst_n => Y_end_0[9].ACLR
rst_n => Y_end_0[10].ACLR
rst_n => Y_end_0[11].ACLR
rst_n => Y_end_0[12].ACLR
rst_n => Y_end_0[13].ACLR
rst_n => Y_end_0[14].ACLR
rst_n => Y_end_0[15].ACLR
rst_n => Y_end_0[16].ACLR
rst_n => Y_end_0[17].ACLR
rst_n => Y_end_0[18].ACLR
rst_n => Y_end_0[19].ACLR
rst_n => Y_end_0[20].ACLR
rst_n => Y_end_0[21].ACLR
rst_n => Y_end_0[22].ACLR
rst_n => Y_end_0[23].ACLR
rst_n => X_end_0[0].ACLR
rst_n => X_end_0[1].ACLR
rst_n => X_end_0[2].ACLR
rst_n => X_end_0[3].ACLR
rst_n => X_end_0[4].ACLR
rst_n => X_end_0[5].ACLR
rst_n => X_end_0[6].ACLR
rst_n => X_end_0[7].ACLR
rst_n => X_end_0[8].ACLR
rst_n => X_end_0[9].ACLR
rst_n => X_end_0[10].ACLR
rst_n => X_end_0[11].ACLR
rst_n => X_end_0[12].ACLR
rst_n => X_end_0[13].ACLR
rst_n => X_end_0[14].ACLR
rst_n => X_end_0[15].ACLR
rst_n => X_end_0[16].ACLR
rst_n => X_end_0[17].ACLR
rst_n => X_end_0[18].ACLR
rst_n => X_end_0[19].ACLR
rst_n => X_end_0[20].ACLR
rst_n => X_end_0[21].ACLR
rst_n => X_end_0[22].ACLR
rst_n => X_end_0[23].ACLR
rst_n => Y_end_t[0].ACLR
rst_n => Y_end_t[1].ACLR
rst_n => Y_end_t[2].ACLR
rst_n => Y_end_t[3].ACLR
rst_n => Y_end_t[4].ACLR
rst_n => Y_end_t[5].ACLR
rst_n => Y_end_t[6].ACLR
rst_n => Y_end_t[7].ACLR
rst_n => Y_end_t[8].ACLR
rst_n => Y_end_t[9].ACLR
rst_n => Y_end_t[10].ACLR
rst_n => Y_end_t[11].ACLR
rst_n => Y_end_t[12].ACLR
rst_n => Y_end_t[13].ACLR
rst_n => Y_end_t[14].ACLR
rst_n => Y_end_t[15].ACLR
rst_n => Y_end_t[16].ACLR
rst_n => Y_end_t[17].ACLR
rst_n => Y_end_t[18].ACLR
rst_n => Y_end_t[19].ACLR
rst_n => Y_end_t[20].ACLR
rst_n => Y_end_t[21].ACLR
rst_n => Y_end_t[22].ACLR
rst_n => Y_end_t[23].ACLR
rst_n => X_end_t[0].ACLR
rst_n => X_end_t[1].ACLR
rst_n => X_end_t[2].ACLR
rst_n => X_end_t[3].ACLR
rst_n => X_end_t[4].ACLR
rst_n => X_end_t[5].ACLR
rst_n => X_end_t[6].ACLR
rst_n => X_end_t[7].ACLR
rst_n => X_end_t[8].ACLR
rst_n => X_end_t[9].ACLR
rst_n => X_end_t[10].ACLR
rst_n => X_end_t[11].ACLR
rst_n => X_end_t[12].ACLR
rst_n => X_end_t[13].ACLR
rst_n => X_end_t[14].ACLR
rst_n => X_end_t[15].ACLR
rst_n => X_end_t[16].ACLR
rst_n => X_end_t[17].ACLR
rst_n => X_end_t[18].ACLR
rst_n => X_end_t[19].ACLR
rst_n => X_end_t[20].ACLR
rst_n => X_end_t[21].ACLR
rst_n => X_end_t[22].ACLR
rst_n => X_end_t[23].ACLR
rst_n => max[0].ACLR
rst_n => max[1].ACLR
rst_n => max[2].ACLR
rst_n => max[3].ACLR
rst_n => max[4].ACLR
rst_n => max[5].ACLR
rst_n => max[6].ACLR
rst_n => max[7].ACLR
rst_n => max[8].ACLR
rst_n => max[9].ACLR
rst_n => max[10].ACLR
rst_n => max[11].ACLR
rst_n => max[12].ACLR
rst_n => max[13].ACLR
rst_n => max[14].ACLR
rst_n => max[15].ACLR
rst_n => max[16].ACLR
rst_n => max[17].ACLR
rst_n => max[18].ACLR
rst_n => max[19].ACLR
rst_n => max[20].ACLR
rst_n => max[21].ACLR
rst_n => max[22].ACLR
rst_n => max[23].ACLR
rst_n => Y_en.ACLR
rst_n => X_en.ACLR
rst_n => count2[0].ACLR
rst_n => count2[1].ACLR
rst_n => count2[2].ACLR
rst_n => count2[3].ACLR
rst_n => count2[4].ACLR
rst_n => count2[5].ACLR
rst_n => count2[6].ACLR
rst_n => count2[7].ACLR
rst_n => count2[8].ACLR
rst_n => count2[9].ACLR
rst_n => count2[10].ACLR
rst_n => count2[11].ACLR
rst_n => count2[12].ACLR
rst_n => count2[13].ACLR
rst_n => count2[14].ACLR
rst_n => count2[15].ACLR
rst_n => Y_P_out~reg0.PRESET
rst_n => X_P_out~reg0.PRESET
rst_n => Ys[0].ACLR
rst_n => Ys[1].ACLR
rst_n => Ys[2].ACLR
rst_n => Ys[3].ACLR
rst_n => Ys[4].ACLR
rst_n => Ys[5].ACLR
rst_n => Ys[6].ACLR
rst_n => Ys[7].ACLR
rst_n => Ys[8].ACLR
rst_n => Ys[9].ACLR
rst_n => Ys[10].ACLR
rst_n => Ys[11].ACLR
rst_n => Ys[12].ACLR
rst_n => Ys[13].ACLR
rst_n => Ys[14].ACLR
rst_n => Ys[15].ACLR
rst_n => Ys[16].ACLR
rst_n => Ys[17].ACLR
rst_n => Ys[18].ACLR
rst_n => Ys[19].ACLR
rst_n => Ys[20].ACLR
rst_n => Ys[21].ACLR
rst_n => Ys[22].ACLR
rst_n => Ys[23].ACLR
rst_n => Xs[0].ACLR
rst_n => Xs[1].ACLR
rst_n => Xs[2].ACLR
rst_n => Xs[3].ACLR
rst_n => Xs[4].ACLR
rst_n => Xs[5].ACLR
rst_n => Xs[6].ACLR
rst_n => Xs[7].ACLR
rst_n => Xs[8].ACLR
rst_n => Xs[9].ACLR
rst_n => Xs[10].ACLR
rst_n => Xs[11].ACLR
rst_n => Xs[12].ACLR
rst_n => Xs[13].ACLR
rst_n => Xs[14].ACLR
rst_n => Xs[15].ACLR
rst_n => Xs[16].ACLR
rst_n => Xs[17].ACLR
rst_n => Xs[18].ACLR
rst_n => Xs[19].ACLR
rst_n => Xs[20].ACLR
rst_n => Xs[21].ACLR
rst_n => Xs[22].ACLR
rst_n => Xs[23].ACLR
rst_n => count[0].ACLR
rst_n => count[1].ACLR
rst_n => count[2].ACLR
rst_n => count[3].ACLR
rst_n => count[4].ACLR
rst_n => count[5].ACLR
rst_n => count[6].ACLR
rst_n => count[7].ACLR
rst_n => count[8].ACLR
rst_n => count[9].ACLR
rst_n => count[10].ACLR
rst_n => count[11].ACLR
rst_n => count[12].ACLR
rst_n => count[13].ACLR
rst_n => count[14].ACLR
rst_n => count[15].ACLR
rst_n => count[16].ACLR
rst_n => count[17].ACLR
rst_n => count[18].ACLR
rst_n => count[19].ACLR
rst_n => count[20].ACLR
rst_n => count[21].ACLR
rst_n => count[22].ACLR
rst_n => count[23].ACLR
rst_n => reg_Ys_0.ACLR
rst_n => reg_Xs_0.ACLR
rst_n => state2~5.DATAIN
rst_n => state1~6.DATAIN
rst_n => state0~7.DATAIN
rst_n => Xn[23].ENA
rst_n => Xn[22].ENA
rst_n => Xn[21].ENA
rst_n => Xn[20].ENA
rst_n => Xn[19].ENA
rst_n => Xn[18].ENA
rst_n => Xn[17].ENA
rst_n => Xn[16].ENA
rst_n => Xn[15].ENA
rst_n => Xn[14].ENA
rst_n => Xn[13].ENA
rst_n => Xn[12].ENA
rst_n => Xn[11].ENA
rst_n => Xn[10].ENA
rst_n => Xn[9].ENA
rst_n => Xn[8].ENA
rst_n => Xn[7].ENA
rst_n => Xn[6].ENA
rst_n => Xn[5].ENA
rst_n => Xn[4].ENA
rst_n => Xn[3].ENA
rst_n => Xn[2].ENA
rst_n => Xn[1].ENA
rst_n => Xn[0].ENA
rst_n => Yn[23].ENA
rst_n => Yn[22].ENA
rst_n => Yn[21].ENA
rst_n => Yn[20].ENA
rst_n => Yn[19].ENA
rst_n => Yn[18].ENA
rst_n => Yn[17].ENA
rst_n => Yn[16].ENA
rst_n => Yn[15].ENA
rst_n => Yn[14].ENA
rst_n => Yn[13].ENA
rst_n => Yn[12].ENA
rst_n => Yn[11].ENA
rst_n => Yn[10].ENA
rst_n => Yn[9].ENA
rst_n => Yn[8].ENA
rst_n => Yn[7].ENA
rst_n => Yn[6].ENA
rst_n => Yn[5].ENA
rst_n => Yn[4].ENA
rst_n => Yn[3].ENA
rst_n => Yn[2].ENA
rst_n => Yn[1].ENA
rst_n => Yn[0].ENA
X_end[0] => Add0.IN48
X_end[0] => Equal0.IN23
X_end[0] => X_end_0.DATAB
X_end[1] => Add0.IN47
X_end[1] => Equal0.IN22
X_end[1] => X_end_0.DATAB
X_end[2] => Add0.IN46
X_end[2] => Equal0.IN21
X_end[2] => X_end_0.DATAB
X_end[3] => Add0.IN45
X_end[3] => Equal0.IN20
X_end[3] => X_end_0.DATAB
X_end[4] => Add0.IN44
X_end[4] => Equal0.IN19
X_end[4] => X_end_0.DATAB
X_end[5] => Add0.IN43
X_end[5] => Equal0.IN18
X_end[5] => X_end_0.DATAB
X_end[6] => Add0.IN42
X_end[6] => Equal0.IN17
X_end[6] => X_end_0.DATAB
X_end[7] => Add0.IN41
X_end[7] => Equal0.IN16
X_end[7] => X_end_0.DATAB
X_end[8] => Add0.IN40
X_end[8] => Equal0.IN15
X_end[8] => X_end_0.DATAB
X_end[9] => Add0.IN39
X_end[9] => Equal0.IN14
X_end[9] => X_end_0.DATAB
X_end[10] => Add0.IN38
X_end[10] => Equal0.IN13
X_end[10] => X_end_0.DATAB
X_end[11] => Add0.IN37
X_end[11] => Equal0.IN12
X_end[11] => X_end_0.DATAB
X_end[12] => Add0.IN36
X_end[12] => Equal0.IN11
X_end[12] => X_end_0.DATAB
X_end[13] => Add0.IN35
X_end[13] => Equal0.IN10
X_end[13] => X_end_0.DATAB
X_end[14] => Add0.IN34
X_end[14] => Equal0.IN9
X_end[14] => X_end_0.DATAB
X_end[15] => Add0.IN33
X_end[15] => Equal0.IN8
X_end[15] => X_end_0.DATAB
X_end[16] => Add0.IN32
X_end[16] => Equal0.IN7
X_end[16] => X_end_0.DATAB
X_end[17] => Add0.IN31
X_end[17] => Equal0.IN6
X_end[17] => X_end_0.DATAB
X_end[18] => Add0.IN30
X_end[18] => Equal0.IN5
X_end[18] => X_end_0.DATAB
X_end[19] => Add0.IN29
X_end[19] => Equal0.IN4
X_end[19] => X_end_0.DATAB
X_end[20] => Add0.IN28
X_end[20] => Equal0.IN3
X_end[20] => X_end_0.DATAB
X_end[21] => Add0.IN27
X_end[21] => Equal0.IN2
X_end[21] => X_end_0.DATAB
X_end[22] => Add0.IN26
X_end[22] => Equal0.IN1
X_end[22] => X_end_0.DATAB
X_end[23] => Add0.IN25
X_end[23] => Equal0.IN0
X_end[23] => X_end_0.DATAB
Y_end[0] => Add1.IN48
Y_end[0] => Equal1.IN23
Y_end[0] => Y_end_0.DATAB
Y_end[1] => Add1.IN47
Y_end[1] => Equal1.IN22
Y_end[1] => Y_end_0.DATAB
Y_end[2] => Add1.IN46
Y_end[2] => Equal1.IN21
Y_end[2] => Y_end_0.DATAB
Y_end[3] => Add1.IN45
Y_end[3] => Equal1.IN20
Y_end[3] => Y_end_0.DATAB
Y_end[4] => Add1.IN44
Y_end[4] => Equal1.IN19
Y_end[4] => Y_end_0.DATAB
Y_end[5] => Add1.IN43
Y_end[5] => Equal1.IN18
Y_end[5] => Y_end_0.DATAB
Y_end[6] => Add1.IN42
Y_end[6] => Equal1.IN17
Y_end[6] => Y_end_0.DATAB
Y_end[7] => Add1.IN41
Y_end[7] => Equal1.IN16
Y_end[7] => Y_end_0.DATAB
Y_end[8] => Add1.IN40
Y_end[8] => Equal1.IN15
Y_end[8] => Y_end_0.DATAB
Y_end[9] => Add1.IN39
Y_end[9] => Equal1.IN14
Y_end[9] => Y_end_0.DATAB
Y_end[10] => Add1.IN38
Y_end[10] => Equal1.IN13
Y_end[10] => Y_end_0.DATAB
Y_end[11] => Add1.IN37
Y_end[11] => Equal1.IN12
Y_end[11] => Y_end_0.DATAB
Y_end[12] => Add1.IN36
Y_end[12] => Equal1.IN11
Y_end[12] => Y_end_0.DATAB
Y_end[13] => Add1.IN35
Y_end[13] => Equal1.IN10
Y_end[13] => Y_end_0.DATAB
Y_end[14] => Add1.IN34
Y_end[14] => Equal1.IN9
Y_end[14] => Y_end_0.DATAB
Y_end[15] => Add1.IN33
Y_end[15] => Equal1.IN8
Y_end[15] => Y_end_0.DATAB
Y_end[16] => Add1.IN32
Y_end[16] => Equal1.IN7
Y_end[16] => Y_end_0.DATAB
Y_end[17] => Add1.IN31
Y_end[17] => Equal1.IN6
Y_end[17] => Y_end_0.DATAB
Y_end[18] => Add1.IN30
Y_end[18] => Equal1.IN5
Y_end[18] => Y_end_0.DATAB
Y_end[19] => Add1.IN29
Y_end[19] => Equal1.IN4
Y_end[19] => Y_end_0.DATAB
Y_end[20] => Add1.IN28
Y_end[20] => Equal1.IN3
Y_end[20] => Y_end_0.DATAB
Y_end[21] => Add1.IN27
Y_end[21] => Equal1.IN2
Y_end[21] => Y_end_0.DATAB
Y_end[22] => Add1.IN26
Y_end[22] => Equal1.IN1
Y_end[22] => Y_end_0.DATAB
Y_end[23] => Add1.IN25
Y_end[23] => Equal1.IN0
Y_end[23] => Y_end_0.DATAB
X_P_out <= X_P_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
Y_P_out <= Y_P_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DDA|PLL:PLL
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk


|DDA|PLL:PLL|altpll:altpll_component
inclk[0] => PLL_altpll:auto_generated.inclk[0]
inclk[1] => PLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|DDA|PLL:PLL|altpll:altpll_component|PLL_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


